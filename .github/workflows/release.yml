name: Publish release

on:
  workflow_dispatch:

jobs:
  publish-release:
    runs-on: ubuntu-latest
    environment: release
    strategy:
      fail-fast: true
    permissions:
      contents: write
      packages: write

    steps:
      - name: Check branch
        if: ${{ github.ref != 'refs/heads/master' }}
        run: echo "Invalid branch. This action can only be run on the master branch." && exit 1

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PRESTODB_CI_TOKEN }}
          show-progress: false
          fetch-depth: 0
          ref: master

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'
          overwrite-settings: true
          server-id: ossrh
          server-username: NEXUS_USERNAME
          server-password: NEXUS_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Set up git
        run: |
          git config --global --add safe.directory ${{github.workspace}}
          git config --global user.email "ci@lists.prestodb.io"
          git config --global user.name "prestodb-ci"
          git config pull.rebase false

      - name: Get release version
        id: get-version
        run: |
          RELEASE_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \
            -Dexpression=project.version -q -ntp -DforceStdout | tail -n 1 | sed 's/-SNAPSHOT//')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$RELEASE_VERSION"
          echo "In case cut release failed, please delete the tag ${RELEASE_VERSION} manually"

      - name: Prepare release
        run: |
          git reset --hard
          mvn release:prepare -DreleaseVersion=${{ env.RELEASE_VERSION }}
          grep -m 1 "<version>" pom.xml
          git log --pretty="format:%ce: %s" -5

      - name: Set up GPG key
        run: |
          echo "${{ secrets.GPG_SECRET }}" > ${{ env.GPG_KEY_FILE }}
          chmod 600 ${{ env.GPG_KEY_FILE }}
          gpg --import --batch ${{ env.GPG_KEY_FILE }}
          gpg --batch --yes --pinentry-mode loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}" --sign ${{ env.GPG_KEY_FILE }}
        env:
          GPG_TTY: $(tty)
          GPG_KEY_FILE: /tmp/gpg-key.txt

      - name: Publish release
        run: |
          git checkout ${{ env.RELEASE_VERSION }}
          git log --pretty="format:%ce: %s" -4
          cat ~/.m2/settings.xml
          cd presto-release-tools
          mvn package gpg:sign deploy -Pdeploy-to-ossrh
          cd ..
        env:
          NEXUS_USERNAME: "${{ secrets.NEXUS_USERNAME }}"
          NEXUS_PASSWORD: "${{ secrets.NEXUS_PASSWORD }}"

      - name: Push changes and tags
        run: |
          git checkout master
          git log --pretty="format:%ce: %s" -5
          git push origin master --tags
